/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/gamingroom.glb 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/gamingroom.glb')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Plane.geometry} material={nodes.Plane.material} position={[0, 0.092, 0]} />
      <mesh geometry={nodes.Table.geometry} material={nodes.Table.material} position={[0.022, 1.537, 1.359]} />
      <mesh geometry={nodes.DocHolder.geometry} material={nodes.DocHolder.material} position={[0.022, 0.116, 1.359]} />
      <mesh geometry={nodes.TV.geometry} material={nodes.TV.material} position={[-3.905, 3.12, 0]} rotation={[0.004, -0.002, -0.096]} />
      <mesh geometry={nodes.Sofa.geometry} material={nodes.Sofa.material} position={[1.536, 0.216, -3.054]} />
      <mesh geometry={nodes.Speaker1.geometry} material={nodes.Speaker1.material} position={[-3.999, 3.795, 3.397]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} />
      <mesh geometry={nodes.Speaker2.geometry} material={nodes.Speaker2.material} position={[-3.984, 3.795, -3.366]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} />
      <mesh geometry={nodes.D2.geometry} material={nodes.D2.material} position={[0.018, 2.185, 1.378]} rotation={[0, 0, -Math.PI / 2]} />
      <mesh geometry={nodes.Wall2.geometry} material={nodes.Wall2.material} position={[0.012, 0.092, -0.006]} />
      <mesh geometry={nodes.LIGHTS.geometry} material={nodes.LIGHTS.material} position={[0.608, 2.229, -3.911]} rotation={[-Math.PI / 2, 0, Math.PI]} />
      <mesh geometry={nodes.D1.geometry} material={nodes.D1.material} position={[0.471, 2.185, 2.598]} rotation={[0, 0.625, -Math.PI / 2]} />
      <mesh geometry={nodes.D3.geometry} material={nodes.D3.material} position={[0.358, 2.185, 0.095]} rotation={[0, -0.558, -Math.PI / 2]} />
      <mesh geometry={nodes.Mat.geometry} material={nodes.Mat.material} position={[0.428, 1.545, 1.214]} />
      <mesh geometry={nodes.keyboard.geometry} material={nodes.keyboard.material} position={[0.464, 1.6, 1.432]} rotation={[0, 1.571, 0]} />
      <mesh geometry={nodes.mouse.geometry} material={nodes.mouse.material} position={[0.268, 1.576, 0.241]} rotation={[-Math.PI / 2, 0, 1.402]} />
      <mesh geometry={nodes.DownLights.geometry} material={nodes.DownLights.material} position={[-3.997, 0.146, 0.02]} rotation={[0, 0, -Math.PI / 2]} scale={[0.409, 1, 1]} />
      <mesh geometry={nodes.Poster.geometry} material={nodes.Poster.material} position={[2.579, 3.131, -3.938]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Globe.geometry} material={nodes.Globe.material} position={[-3.31, 1.155, -1.449]} rotation={[-Math.PI / 2, 0, -1.407]} />
      <mesh geometry={nodes.sidetable.geometry} material={nodes.sidetable.material} position={[-3.311, 0.092, 0.027]} scale={[1, 1, 3.216]} />
      <mesh geometry={nodes.books.geometry} material={nodes.books.material} position={[-3.772, 1.129, -0.068]} rotation={[-Math.PI / 2, 0, Math.PI / 2]} scale={1.805} />
      <mesh geometry={nodes.plant.geometry} material={nodes.plant.material} position={[-3.511, 1.117, 1.364]} />
      <mesh geometry={nodes.ringlight.geometry} material={nodes.ringlight.material} position={[-2.838, 0, 3.412]} rotation={[-Math.PI / 2, 0, -2.289]} scale={0.008} />
      <mesh geometry={nodes.Plane001.geometry} material={nodes.Plane001.material} position={[0, 0.105, 0]} />
      <mesh geometry={nodes.Plane002.geometry} material={nodes.Plane002.material} position={[0.008, 0.092, 0]} />
      <mesh geometry={nodes.D1screen.geometry} material={nodes.D1screen.material} position={[0.48, 2.185, 2.598]} rotation={[0, 0.625, -Math.PI / 2]} />
      <mesh geometry={nodes.D2screen.geometry} material={nodes.D2screen.material} position={[0.024, 2.185, 1.378]} rotation={[0, 0, -Math.PI / 2]} />
      <mesh geometry={nodes.D3screen.geometry} material={nodes.D3screen.material} position={[0.36, 2.185, 0.095]} rotation={[0, -0.558, -Math.PI / 2]} />
      <mesh geometry={nodes.TVscreen.geometry} material={nodes.TVscreen.material} position={[-3.901, 3.12, 0]} rotation={[0.004, -0.002, -0.096]} />
      <mesh geometry={nodes.gchair.geometry} material={nodes.gchair.material} position={[2.601, 2.793, 0.293]} rotation={[Math.PI / 2, 0, 0.661]} scale={0.097} />
    </group>
  )
}

useGLTF.preload('/gamingroom.glb')
